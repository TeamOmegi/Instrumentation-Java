plugins {
    id 'java'
    id "com.github.johnrengelman.shadow" version "8.1.1"
    id "com.diffplug.spotless" version "6.25.0"

    id "io.opentelemetry.instrumentation.muzzle-generation" version "2.4.0-alpha-SNAPSHOT"
    id "io.opentelemetry.instrumentation.muzzle-check" version "2.4.0-alpha-SNAPSHOT"
}

group = 'org.omegi'
version = '1.0.0'
archivesBaseName = 'omegi-opentelemetry-extension'

ext {
    versions = [
            // this line is managed by .github/scripts/update-sdk-version.sh
            opentelemetrySdk           : "1.37.0",

            // these lines are managed by .github/scripts/update-version.sh
            opentelemetryJavaagent     : "2.4.0-SNAPSHOT",
            opentelemetryJavaagentAlpha: "2.4.0-alpha-SNAPSHOT",

            junit                      : "5.10.2"
    ]

    deps = [
            autoservice: dependencies.create(group: 'com.google.auto.service', name: 'auto-service', version: '1.1.1')
    ]
}


java {
    sourceCompatibility = '17'
}

compileJava {
    options.encoding = 'UTF-8'
}

repositories {
    mavenCentral()
    maven {
        name = "sonatype"
        url = uri("https://oss.sonatype.org/content/repositories/snapshots")
    }
}

configurations {
    otel
}

dependencies {
    implementation(platform("io.opentelemetry:opentelemetry-bom:${versions.opentelemetrySdk}"))

    // these serve as a test of the instrumentation boms
    implementation(platform("io.opentelemetry.instrumentation:opentelemetry-instrumentation-bom:${versions.opentelemetryJavaagent}"))
    implementation(platform("io.opentelemetry.instrumentation:opentelemetry-instrumentation-bom-alpha:${versions.opentelemetryJavaagentAlpha}"))

    compileOnly("io.opentelemetry:opentelemetry-sdk-extension-autoconfigure-spi")
    compileOnly("io.opentelemetry.instrumentation:opentelemetry-instrumentation-api")
    compileOnly("io.opentelemetry.javaagent:opentelemetry-javaagent-extension-api")

    compileOnly deps.autoservice
    annotationProcessor deps.autoservice

    compileOnly group: 'javax.servlet', name: 'javax.servlet-api', version: '3.0.1'

    implementation 'org.apache.commons:commons-lang3:3.14.0'

    //All dependencies below are only for tests
    testImplementation("org.testcontainers:testcontainers:1.19.7")
    testImplementation("com.fasterxml.jackson.core:jackson-databind:2.17.0")
    testImplementation("com.google.protobuf:protobuf-java-util:3.25.3")
    testImplementation("com.squareup.okhttp3:okhttp:4.12.0")
    testImplementation("io.opentelemetry:opentelemetry-api")
    testImplementation("io.opentelemetry.proto:opentelemetry-proto:1.2.0-alpha")

    testImplementation("org.junit.jupiter:junit-jupiter-api:${versions.junit}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${versions.junit}")
    testRuntimeOnly("ch.qos.logback:logback-classic:1.5.6")

    otel("io.opentelemetry.javaagent:opentelemetry-javaagent:${versions.opentelemetryJavaagent}")

    add("codegen", "io.opentelemetry.javaagent:opentelemetry-javaagent-tooling:${versions.opentelemetryJavaagentAlpha}")
    add("muzzleBootstrap", "io.opentelemetry.instrumentation:opentelemetry-instrumentation-annotations-support:${versions.opentelemetryJavaagentAlpha}")
    add("muzzleTooling", "io.opentelemetry.javaagent:opentelemetry-javaagent-extension-api:${versions.opentelemetryJavaagentAlpha}")
    add("muzzleTooling", "io.opentelemetry.javaagent:opentelemetry-javaagent-tooling:${versions.opentelemetryJavaagentAlpha}")

    // openTelemetry
    implementation("io.opentelemetry:opentelemetry-api:1.37.0");
    implementation("io.opentelemetry:opentelemetry-sdk:1.37.0");
    implementation("io.opentelemetry:opentelemetry-sdk-extension-autoconfigure-spi:1.37.0");
    implementation 'io.opentelemetry.javaagent:opentelemetry-javaagent-extension-api:1.33.0-alpha'
    implementation 'io.opentelemetry.javaagent:opentelemetry-javaagent-bootstrap:2.3.0-alpha'
    implementation("io.opentelemetry.semconv:opentelemetry-semconv:1.25.0-alpha");
    implementation("io.opentelemetry:opentelemetry-exporter-logging:1.37.0");

    //auto-service
    implementation 'com.google.auto.service:auto-service:1.1.1'

    // byte-buddy
    implementation 'net.bytebuddy:byte-buddy:1.14.14'

    // kakfa
    implementation 'org.apache.kafka:kafka-clients:3.4.0'

    // gson
    implementation 'com.google.code.gson:gson:2.10.1'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

task extendedAgent(type: Jar) {
    dependsOn(configurations.otel)
    archiveFileName = "omegi-opentelemetry-javaagent.jar"
    from zipTree(configurations.otel.singleFile)
    from(tasks.shadowJar.archiveFile) {
        into "extensions"
    }

    //Preserve MANIFEST.MF file from the upstream javaagent
    doFirst {
        manifest.from(
                zipTree(configurations.otel.singleFile).matching {
                    include 'META-INF/MANIFEST.MF'
                }.singleFile
        )
    }
}

tasks {
    test {
        useJUnitPlatform()

        inputs.files(layout.files(tasks.shadowJar))
        inputs.files(layout.files(tasks.extendedAgent))

        systemProperty 'io.opentelemetry.smoketest.agentPath', configurations.otel.singleFile.absolutePath
        systemProperty 'io.opentelemetry.smoketest.extendedAgentPath', tasks.extendedAgent.archiveFile.get().asFile.absolutePath
        systemProperty 'io.opentelemetry.smoketest.extensionPath', tasks.shadowJar.archiveFile.get().asFile.absolutePath
    }

    compileJava {
        options.release.set(8)
    }

    assemble.dependsOn(shadowJar)
}

muzzle {
    pass {
        group.set("javax.servlet")
        module.set("javax.servlet-api")
        versions.set("[3.0,)")
        assertInverse.set(true)
    }
    pass {
        group.set("javax.servlet")
        module.set("servlet-api")
        versions.set("[2.2, 3.0)")
        assertInverse.set(true)
    }
}